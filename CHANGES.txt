
v4.7.1
    * Removed part of an audio patch make June24 2024 that could result in a slow memory leak.
    * Gold Leaf - 1080p29.97 mis-identified as 1080p30
    * Gold Leaf - simplified how we initialize the HEVC codec (needs a lot of testing)
    * Gold Leaf - whitespace clean, dead code removal
    * Gold Leaf - refactored initialization
    * Gold Leaf - AVC gop size was defaulting to 240 frames, now set to 1 second.
    * Gold Leaf - AVC encoding 8bit 422 / remove a dorc spam console message.

v4.6.1
    * Adjust gold-leaf PCR by -300ms to prevent PTS arriving too late.
    * Bugfixes related to setting codec profile and level not working properly.

v4.5.2
    * Full clean build prior to release

v4.5.1
    * Decklink: Add debug feature to burn timecode into each video frame.

v4.4.2
    * bugfix. Memory leak introduced in 4.3.1 for assessing audio levels (strctly for the web UI).

v4.4.1
    * Gold Leaf encoding support for interlaced AVC 8bit 4:2:0 content
    * Gold Leaf encoding support for AVC content
    * Gold Leaf encoding support for selecting either 4:2:0 ot 4:2:2 colorspace encoding type
    * Gold Leaf encoding support for selecting either 8 bit ot 10 bit encoding mode for progressive content
    * Gold Leaf support for 4K QUAD encoding, in either AVC or HEVC, 8 or 10 bit, 4:2:0 ot 4:2:2
    * Further improvements to the status UI, remains disabled.
    * Bug in the pic_timing struct caused the time_offset field not to be populated with 24bits

v4.3.1
    * Add closed gop support, disabled by default.
    * Add support for pushing internal stats to a local webserver, disabled by default
    * Add support for timecode, generating PIC_TIMING structs, disabled by default.
    * x264 patches for timecode, generating PIC_TIMING structs, disabled by default.
    * nodejs webserver that can receive stats and present to a browser, disabled.
    * Various changes across the stack to collect more metrics, audio levels.

v4.2.1
    * Add audio channel muting support
    * Add audio channel remapping support

v4.1.5
    * Adjust build process to build binaries against 10.8.5-el7 and 12.9-al8

v4.1.4
    * Adjusted audio gain code to support 5.1 discrete configurations
    * Audio regression introduced in 4.0.3 related to vega, broke 1080i29.97 AAC encoding.
    * Adjusted audio gain code to support 5.1 discrete configurations
    * Audio regression introduced in 4.0.3 related to vega, broke 1080i29.97 AAC encoding.

v4.1.0
    * Gain setting added to configuration, allowing stereo pairs to be gain adjusted.

v4.0.5
    * WST startup bug when num aud pairs = 1

v4.0.4
    * Packet framing changes related to WST World Teletext Subtitles
    * Bugfix WST support when less than 8 audio channels are specified

v4.0.3
    * Support for WST World Teletext Subtitles
    * Support for VANC reception/injection via UDP socket
    * AC3 fixes with the vega card

v4.0.2
    * Some additional debug added when detecting a signal

v4.0.1
    * Enabled support for the vega 3311 high density encoding card (gold leaf)
    * Vega: Experimental support for better detecting signal loss and restarting service

v3.14.1
    * Added support for multiple SCTE35 pids
    * Added support for SCTE104 as_index and dpi_pid_index to scte35 pids
    * set variable added to disable 608 and VBI SCTE procesing
    * Changed decklink module to be less chatty on the logs about SCTE104 messages

v3.12.1
    * Ongoing changes to support VEGA (in dev)
    * Audio 11172-3 ES type adjustment setting

v3.11.0
    * Tidy up NDI support for the 1080p29.97 use case (only supported use case).
    * Adjustments to audio timing model for NDI to support support upstream vison mixer.

v3.10.0
    * Added debug command to inject multi-part fragmented SCTE104 message for testing
    * Added support for fragmented long SCTE104 messages
    * Added multiple magic commands to mangle output packets - useful for testing downstream equipment
    * HEVC improvement (ongoing, pre-empted by the long 104 bug above)

v3.9.0
    * Bugfix: Encoder outage after 82 days of runtime.
    * Enhancement: Add dialnorm support when doing AC3 encoding. Default is -31, now its adjustable 0 to -31.
    * Changes to the codebase related to the Vega hardware encoder as a new input type (disabled).
    * New internal debug command that dumps the contents of the smoother queue, to assist in debugging.
    * Small amount of refactoring related to audio parameter passing, various code comments and clarifications.

v3.8.0
    * Bugfix: very long SCTE104 messages would be truncled (by libklvanc) and the resulting
      SCTE35 message would contain blank/null fields.
    * Merged the upstream libklvanc tree, various fixes (unused by ltn encoder) related to its functionality.

v3.7.1
    * Add load average values during output of core statistics - debug feature
    * Add output output TRIM feature, to add latency to the IP output. For use in low latency mode.

v3.6.0
    SCTE35 related changes:
    * Don't output PMT ES data alignment descriptors in SCTE35 streams
    * Don't output PMT CUE registration descriptors if SCTE35 is disabled in the encoder.
    * Removed all PMT ES CUE identification descriptors, no longer output by default.
    Bugfix:
    * Incorrect/default iframe-interval was being set for 24p content, resulting in od video bitrates.
    Changes:
    * Refactor the v3.5.0b1 SCTE104/35 translation and avoid using scte35 pts_adjument field.
    Known Issues:
    * SCTE104/35 is not working for HEVC encode sessions (but has no current customer today).

v3.5.0
    Bugfix:
    * Improve SCTE35 timing/slice calculation in Normal Latency mode.
    * Improvements to SCTE35 for HEVC and H264, tested in the following formats:
      720x480i29.97
      1920x1080i29.97
      1280x720p59.94
      1920x1080p59.94

v3.5.0b1
    Notes:
    * Only to be used for customer X, reporting the SCTE35 slice issue
    * NOT TO BE DEPLOYED TO ANY OTHER SITE
    * Only to be used with 1080i29.97 input sources in Normal or Low Latency configurations.

    Key feature changes:
    * Improve SCTE35 timing/slice calculation in Normal Latency mode.
    * Add fix for proper TS padding for SCTE-35 messages

    Developer changes
    * decklink: add set variable option to burn in walltime to the decklink frame, prior to encode

v3.4.0
    Key feature changes:
    * Formalize support for NDI SDK 4.5, enable encoding from NDI to IP.

    Developer changes:
    * Disabled by default, some debug code around x264 related to codec tuning.
    * Ongoing NDI related work
    * ndi: cleanups. Add suport for 8xaudio. bugfix with audio arriving late in 1080p59.94 mode
    * decklink: On Apple platforms, don't try to configure SD assembly functions, and avoid an unused var
    * Support for decklink inputs on Apple platforms (and various Apple platform related fixes)
    * Developer levels support (non-functional) for AVFoundation on Apple platforms.

v3.3.0
    Key feature changes:
    * A52 changes to allow bitstream selection from any SDI pair.
    * Support for UDP packets with less than 7 TS packets.
      This must be configured before issuing the encoder start command.
      Only tested with 1128 and 1316, the syntax is:
      set variable udp_output.transport_payload_size = 1128

    Developer changes:
    * GPU related changes for NVIDIA GPUs vs Intel GPUS. (No official GPU support)
    * 4K p25/p50/p59.94/p60 related improvements, better profiling in the video filter (in developer builds only).
    * When runtime thermal stats are enabled, check in multiple /sys/devices locations for thermal sensor metrics.
    * Changes for measuring BPS with higher levels precision for network output (debug logging)
    * Non-default debug messages add in developer builds.
    * Bit-rot Improvements when encoding from USB webcams (in developer builds only).

v3.2.8
    * VANC SCTE104 Disney BrandNet 52/01 messages being lost due to malformed CRCs

v3.2.7
    * SCTE35/104 detection/conversion not working for SD channels.

v3.2.6
    * Revert hevc: Enable SEI recovery points in nal output

v3.2.5
    * ac3/aac/mp2: sdi-audio-pair bug, resulting in the wrong SDI audio channel being encoded.
    * obe: when displaying codec stream configurations on startup, display the sdi audio pair being used.

v3.2.4
    * hevc: Enable AUD in output nals* hevc: Enable SEI recovery points in nal output

v3.2.3
    * hevc: set qpstep to 12 (from def 4) to allow the encoder to step by more than 4 qp units
            in the event of wild bitrate swings
    * hevc: interlaced. Reduce the CTU to improve the CPU encoding time. The alternative was
            allowing the video q get behind and force the QP to 40
    * hevc: interlaced, increase eminimum QP to give better performance CPU performance on still images

v3.2.2
    * hevc: Don't reduce the QP if the video queue gets behind

v3.2.1
    * hevc: two new options to consider in the future, added but commented out.
    * core: added skeleton funcs to eventually centralize a handful of process statistics
    * core: add a func to detect what kind of cpu the s/w is running on.
    * core: add a func to return the video encoder frame queue depth
    * muxer: don't warn more than once per second if the multiplex has no padding
    * video sei timestamping: various improves after hard including the source into ffmpeg for test purposes
    * video sei timestamping: rename core funcs across the entire project

